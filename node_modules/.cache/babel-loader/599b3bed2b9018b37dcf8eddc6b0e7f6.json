{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tahaa\\\\Desktop\\\\transaction-tracker\\\\src\\\\transContext.js\";\nimport React, { createContext, useReducer } from 'react';\nimport TransactionReducer from './transReducer';\nconst intitialTransactions = [];\nexport const TransactionContext = createContext(intitialTransactions);\nexport const TransactionProvider = ({\n  children\n}) => {\n  let [state, dispatch] = useReducer(TransactionReducer, intitialTransactions);\n\n  function addTransaction(transObj) {\n    let ind = 0; // try {\n    //     for (ind = 0; ind < state.length; ind++) {\n    //         if (state[ind].desc === transObj.desc) {\n    //             console.log(transObj.amount)\n    //             state[ind].amount = Number(state[ind].amount) + Number(transObj.amount);\n    //             console.log(state[ind].amount)\n    //             dispatch({\n    //                 type: \"ADD_TRANSACTION\",\n    //                 payload: {\n    //                     amount: state[ind].amount,\n    //                     desc: state[ind].desc\n    //                 },\n    //             })\n    //         }\n    //         return\n    //     }\n    // }\n    // catch {\n    //     console.log(\"state[ind+1]\")\n    // }\n\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: {\n        amount: transObj.amount,\n        desc: transObj.desc\n      }\n    });\n  }\n\n  function deleteTransaction(key) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      ...state,\n      [key]: null\n    });\n    console.log(state);\n  }\n\n  return /*#__PURE__*/React.createElement(TransactionContext.Provider, {\n    value: {\n      transactions: state,\n      addTransaction,\n      deleteTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/tahaa/Desktop/transaction-tracker/src/transContext.js"],"names":["React","createContext","useReducer","TransactionReducer","intitialTransactions","TransactionContext","TransactionProvider","children","state","dispatch","addTransaction","transObj","ind","type","payload","amount","desc","deleteTransaction","key","console","log","transactions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;AAEA,MAAMC,oBAAoB,GAAG,EAA7B;AAIA,OAAO,MAAMC,kBAAkB,GAAGJ,aAAa,CAACG,oBAAD,CAAxC;AAEP,OAAO,MAAME,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjD,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACC,kBAAD,EAAqBC,oBAArB,CAAlC;;AAEA,WAASM,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,QAAIC,GAAG,GAAG,CAAV,CAD8B,CAG9B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,iBADD;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAEJ,QAAQ,CAACI,MADZ;AAELC,QAAAA,IAAI,EAAEL,QAAQ,CAACK;AAFV;AAFJ,KAAD,CAAR;AAOH;;AACD,WAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC5BT,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,oBADD;AAGD,SAAGL,KAHF;AAID,OAACU,GAAD,GAAO;AAJN,KAAD,CAAR;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACH;;AACD,sBACI,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAChCa,MAAAA,YAAY,EAAEb,KADkB;AAEhCE,MAAAA,cAFgC;AAGhCO,MAAAA;AAHgC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKV,QANL,CADJ;AAUH,CAzDM","sourcesContent":["import React, { createContext, useReducer } from 'react'\r\nimport TransactionReducer from './transReducer'\r\n\r\nconst intitialTransactions = [\r\n\r\n]\r\n\r\nexport const TransactionContext = createContext(intitialTransactions);\r\n\r\nexport const TransactionProvider = ({ children }) => {\r\n    let [state, dispatch] = useReducer(TransactionReducer, intitialTransactions);\r\n\r\n    function addTransaction(transObj) {\r\n        let ind = 0;\r\n\r\n        // try {\r\n        //     for (ind = 0; ind < state.length; ind++) {\r\n        //         if (state[ind].desc === transObj.desc) {\r\n        //             console.log(transObj.amount)\r\n        //             state[ind].amount = Number(state[ind].amount) + Number(transObj.amount);\r\n        //             console.log(state[ind].amount)\r\n\r\n        //             dispatch({\r\n        //                 type: \"ADD_TRANSACTION\",\r\n        //                 payload: {\r\n        //                     amount: state[ind].amount,\r\n        //                     desc: state[ind].desc\r\n        //                 },\r\n        //             })\r\n        //         }\r\n        //         return\r\n        //     }\r\n\r\n        // }\r\n        // catch {\r\n        //     console.log(\"state[ind+1]\")\r\n        // }\r\n\r\n        dispatch({\r\n            type: \"ADD_TRANSACTION\",\r\n            payload: {\r\n                amount: transObj.amount,\r\n                desc: transObj.desc\r\n            },\r\n        })\r\n    }\r\n    function deleteTransaction(key) {\r\n        dispatch({\r\n            type: \"DELETE_TRANSACTION\",\r\n            \r\n                ...state,\r\n                [key]: null\r\n            \r\n        })\r\n        console.log(state)\r\n    }\r\n    return (\r\n        <TransactionContext.Provider value={{\r\n            transactions: state,\r\n            addTransaction,\r\n            deleteTransaction\r\n            \r\n        }}>\r\n            {children}\r\n        </TransactionContext.Provider>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}